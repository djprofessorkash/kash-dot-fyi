---
import BaseLayout from "../layouts/BaseLayout.astro";
import DynamicGeometry from "../components/DynamicGeometry.astro";
---

<BaseLayout title="Aakash Sudhakar" description="Understanding the world and human expression through code and communication." type="website">
    <div id="contact" class="m-5">
        <DynamicGeometry />
        <div class="flex flex-col-reverse md:flex-row md:justify-start gap-6 md:gap-12 mt-7 md:mt-12 md:items-end text-balance">
            <div class="md:w-1/2 text-pretty" id="texts">
                
                <div id="carousel-container" class="carousel max-w-full overflow-hidden relative">
                    <div id="carousel-track" class="carousel-track flex">
                        <!-- Add project items -->
                        <div
                            class="carousel-item w-1/3 shrink-0 grayscale hover:grayscale-0 hover:scale-110 transition-all duration-300 ease-in-out"
                            style="background-image: url('https://placehold.co/600x400');"
                        >
                            <div class="carousel-content opacity-0 hover:opacity-100 bg-black bg-opacity-50 text-white p-4">
                            <h3 class="text-lg font-bold">Project 1</h3>
                            <p class="text-sm">Description 1</p>
                            </div>
                        </div>
                        <div
                            class="carousel-item w-1/3 shrink-0 grayscale hover:grayscale-0 hover:scale-110 transition-all duration-300 ease-in-out"
                            style="background-image: url('https://placehold.co/600x400');"
                        >
                            <div class="carousel-content opacity-0 hover:opacity-100 bg-black bg-opacity-50 text-white p-4">
                            <h3 class="text-lg font-bold">Project 2</h3>
                            <p class="text-sm">Description 2</p>
                            </div>
                        </div>
                        <div
                            class="carousel-item w-1/3 shrink-0 grayscale hover:grayscale-0 hover:scale-110 transition-all duration-300 ease-in-out"
                            style="background-image: url('https://placehold.co/600x400');"
                        >
                            <div class="carousel-content opacity-0 hover:opacity-100 bg-black bg-opacity-50 text-white p-4">
                            <h3 class="text-lg font-bold">Project 3</h3>
                            <p class="text-sm">Description 3</p>
                            </div>
                        </div>
                        </div>
                    </div>

            </div>
        </div>
    </div>
</BaseLayout>

<script>
    // Select the carousel container and track
    const carouselContainer = document.getElementById('carousel-container');
    const carouselTrack = document.getElementById('carousel-track');
    const items = document.querySelectorAll('.carousel-item');

    // Clone items for infinite scroll effect
    const firstClone = carouselTrack.children[0].cloneNode(true);
    const lastClone = carouselTrack.children[carouselTrack.children.length - 1].cloneNode(true);

    carouselTrack.appendChild(firstClone);
    carouselTrack.insertBefore(lastClone, carouselTrack.firstChild);

    // Set initial state
    let scrollPosition = 0;
    const scrollSpeed = 1; // Adjust speed as necessary
    const itemWidth = items[0].offsetWidth;

    // Infinite scroll function
    function scrollCarousel() {
    scrollPosition -= scrollSpeed;

    if (scrollPosition <= -carouselTrack.scrollWidth / 2) {
        scrollPosition = 0; // Reset position for infinite effect
    }

    carouselTrack.style.transform = `translateX(${scrollPosition}px)`;
    requestAnimationFrame(scrollCarousel);
    }

    // Start the scrolling
    scrollCarousel();

    // Hover effect
    items.forEach((item) => {
    item.addEventListener('mouseenter', () => {
        item.classList.add('hover:grayscale-0', 'hover:scale-110');
    });

    item.addEventListener('mouseleave', () => {
        item.classList.remove('hover:grayscale-0', 'hover:scale-110');
    });
    });
</script>